version: '3.8'

services:
  # Main application
  app:
    build:
      context: ../..
      dockerfile: Dockerfile
    container_name: meunique-ai-ceo
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:password@db:5432/meunique
      REDIS_URL: redis://redis:6379
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - meunique-network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: meunique-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: meunique
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    networks:
      - meunique-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: meunique-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - meunique-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: meunique-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./static:/usr/share/nginx/html:ro
    depends_on:
      - app
    networks:
      - meunique-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: meunique-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - meunique-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: meunique-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - meunique-network

  # Backup service
  backup:
    image: postgres:15-alpine
    container_name: meunique-backup
    restart: "no"
    environment:
      PGPASSWORD: ${DB_PASSWORD}
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    command: /bin/sh -c "chmod +x /backup.sh && crond -f"
    depends_on:
      - db
    networks:
      - meunique-network

  # Local Ollama for cost optimization
  ollama:
    image: ollama/ollama:latest
    container_name: meunique-ollama
    restart: unless-stopped
    volumes:
      - ollama-data:/root/.ollama
    ports:
      - "11434:11434"
    environment:
      OLLAMA_MODELS: "llama3,gemma:2b"
    networks:
      - meunique-network

volumes:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data:
  ollama-data:


networks:
  meunique-network:
    driver: bridge
